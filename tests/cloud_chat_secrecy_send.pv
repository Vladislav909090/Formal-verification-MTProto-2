(*
 * MTProto 2.0: Облачные чаты
 *
 * Модель протокола обмена сообщениями между клиентом и сервером (облачные чаты)
 * с использованием долгосрочного общего ключа между клиентом и сервером Telegram.
 *)

set preciseActions = true.

(*
 * Предположения о секретности: ключи авторизации защищены, долгосрочные и эфемерные ключи не раскрываются.
 *)
not attacker(new sk).
not attacker(new a).
not attacker(new b).
not attacker(new nk).

(*
 * Если ключ авторизации сгенерирован корректно и известен только клиенту и серверу,
 * то сообщения облачного чата защищены от атакующих (сервер, конечно, их видит).
 *)

query s: Nonce, nc,ns,nk: Nonce, p: Modulus, g,g_a: G, m: bitstring, k: AuthKey;
  event(ClientSendsCloudMessage(s, m, k))
  && attacker(m)
  ==> event(RevealedAuthKey(k))
  ||  event(PostCompromisedAuthKey(k))
  ||  event(ClientChecksDHParameters(nc, ns, nk, p, g, g_a, false)).
(* ✔️ Ожидаемый результат: true *)

(* Основной процесс *)

process
  (0
    | !RegisterRSAKey(Server)
    | !ServerAuth(Server)
    | !ClientAuth(Server, true)
    | !ServerCloudChat()
    | !ClientCloudChat(Server)
    | !GenGoodDHParameters()
    | !GenBadDHParameters()
    | !RevealAuthKey()
    | !PostCompromiseAuthKey()
  )